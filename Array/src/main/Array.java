package com.company;

public interface Array<E> {

    void add(E value); // метод add(добавление) - это добавление элементов в нашу коллекцию

    void insert(E value, int index); // метод insert(вставлять) "E value" - принимает то значение, которое мы хотим вставить и "int index" принимает ту позицию, в которую хотим добавить

    E get(int index); // метод get(который возвращает нам значение) - этот метод получает наши объекты по некоторому индексу(index)

    boolean remove(E value); // метод remove(удаляет). Тут в этом методе remove(удаляет) хотим удалять наши элементы, какое-то определённое значение(value). Ответ true(Да), если такой элемент value был и удалился; и flase(Нет), если, такого элемента value не было и он не удалился.

    E remove(int index); // метод remove(удаляет) по определённой позиции(index), тут будет возвращать тот объект, который удалили

    int indexOf(E value); // метод indexOf(возвращает индекс) возвращает индекс в данной строке первого вхождения указанного символа или -1, если символ не встречается.

    default boolean contains(E value) { // метод contains(содержит), это метод contains, говорит о том, если такой элемент в массиве(коллекции), который мы передаём или нет. Если есть, ответ true, если нет ответ false
        return indexOf(value) != -1;  // метод contains(содержит), содержится на методе indexOf(возвращает индекс), если мы вызываем метод contains(содержит), то внутри него вызываем indexOf(возвращает индекс) возвращает индекс в данной строке первого вхождения указанного символа (если он есть в массиве(в коллекции) или -1, если символ не встречается в массиве(в коллекции).
    }

    int size(); // метод size(размер), этот метод говорит актуальное количество элементов, которые сейчас в массиве(в коллекции)

    default boolean isEmpty() { // метод isEmpty(пусто), этот метод говорит, наш массив(коллекция) пустая или нет. Если ответ true(Да), то да пустая; или false(Нет), то нет полная.
        return size() == 0; // Если метод size(размер) ==(равен), то массив(коллеция) пустая и там никаких элементов нет, значит ответ true(Да), а если полная значит, там элементы есть, то ответ flase(Нет).
    }

    void display(); // метод display(отображать) этот метод печатает в консоль состояние непосредственно нашего массива

    void trimToSize(); // метод trimToSize - используется в Java для уменьшения ёмкости списка до количества элементов в нём.
}
